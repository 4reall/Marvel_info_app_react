{"version":3,"file":"static/js/790.372b7d40.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","pages/SinglePage.js","services/marvelServices.js","hooks/useHttp.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={avengers} alt=\"Avengers\" />\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import error from './error.gif';\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\tmargin: '0 auto',\n\t\t\t\twidth: '260px',\n\t\t\t\theight: '250px',\n\t\t\t\tobjectFit: 'contain',\n\t\t\t\t// gridColumn: '2/3',\n\t\t\t}}\n\t\t\tsrc={error}\n\t\t\talt=\"error\"\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nimport Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport { useMarvelServices } from '../services/marvelServices';\n\nimport AppBanner from '../components/appBanner/AppBanner';\n\nconst SinglePage = ({ Component, dataType }) => {\n\tconst [data, setData] = useState(null);\n\tconst { id } = useParams();\n\n\tconst { loading, error, getComic, getCharacter, clearError } =\n\t\tuseMarvelServices();\n\n\tuseEffect(() => {\n\t\tupdateComic();\n\t}, [id]);\n\n\tconst onDataLoaded = (data) => {\n\t\tsetData(data);\n\t};\n\n\tconst updateComic = () => {\n\t\tclearError();\n\t\tswitch (dataType) {\n\t\t\tcase 'comic':\n\t\t\t\tgetComic(id).then(onDataLoaded);\n\t\t\t\tbreak;\n\t\t\tcase 'char':\n\t\t\t\tgetCharacter(id).then(onDataLoaded);\n\t\t}\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading ? <Spinner /> : null;\n\tconst content = !(spinner || errorMessage || !data) ? (\n\t\t<Component data={data} />\n\t) : null;\n\n\treturn (\n\t\t<>\n\t\t\t<AppBanner />\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t{content}\n\t\t</>\n\t);\n};\n\nexport default SinglePage;\n","import { useHttp } from '../hooks/useHttp';\n\nexport const useMarvelServices = () => {\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = 'apikey=804561fe0b4553a3fa7b8ec7fb139828';\n\tconst _baseCharOffset = 210;\n\n\tconst { error, loading, request, clearError } = useHttp();\n\n\tconst getAllCharacters = async (offset = _baseCharOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?name=${name}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getAllComics = async (offset = _baseCharOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComic);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComic(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char, fullDescr = 150) => {\n\t\tconst comicsItems = (arr, length) => {\n\t\t\tif (arr.length) return arr.splice(0, length);\n\t\t\telse return [{ name: 'This character does not have comics' }];\n\t\t};\n\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? fullDescr\n\t\t\t\t\t? char.description\n\t\t\t\t\t: char.description.slice(0, 220)\n\t\t\t\t: 'There is no description for this character',\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomicsItems: comicsItems(char.comics.items, 10),\n\t\t};\n\t};\n\n\tconst _transformComic = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\tthumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\n\t\t\ttitle: comics.title,\n\t\t\tdescription:\n\t\t\t\tcomics.description || 'There is no description for this comic',\n\t\t\tprice: comics.prices[0].price + '$',\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\n\t\t\tpages: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages`\n\t\t\t\t: 'No information about the number of pages',\n\t\t};\n\t};\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t\tclearError,\n\t\tgetCharacterByName,\n\t};\n};\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [error, setError] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst request = useCallback(\n\t\tasync (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, error, request, clearError };\n};\n"],"names":["className","src","avengers","alt","avengersLogo","style","display","margin","width","height","objectFit","error","Component","dataType","useState","data","setData","id","useParams","useMarvelServices","loading","getComic","getCharacter","clearError","useEffect","updateComic","onDataLoaded","then","errorMessage","spinner","content","_apiBase","_apiKey","_baseCharOffset","setError","setLoading","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","message","useHttp","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacterByName","name","getAllComics","_transformComic","char","fullDescr","comicsItems","arr","length","splice","thumbnail","path","extension","description","slice","homepage","urls","wiki","comics","items","title","price","prices","language","textObjects","pages","pageCount"],"sourceRoot":""}