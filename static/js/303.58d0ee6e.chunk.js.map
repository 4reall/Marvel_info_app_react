{"version":3,"file":"static/js/303.58d0ee6e.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorBoundary/errorBoundary.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicItem.js","components/comicsList/ComicsList.js","pages/ComicsPage.js","services/marvelServices.js","hooks/useHttp.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n\treturn (\n\t\t<div className=\"app__banner\">\n\t\t\t<img src={avengers} alt=\"Avengers\" />\n\t\t\t<div className=\"app__banner-text\">\n\t\t\t\tNew comics every week!<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<img src={avengersLogo} alt=\"Avengers logo\" />\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import { Component } from 'react';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass ErrorBoundary extends Component {\n\tstate = {\n\t\terror: false,\n\t};\n\n\tcomponentDidCatch(error, errorMessage) {\n\t\tconsole.log(error, errorMessage);\n\t\tthis.setState({ error: true });\n\t}\n\n\trender() {\n\t\tif (this.state.error) {\n\t\t\treturn <ErrorMessage />;\n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","import error from './error.gif';\n\nconst ErrorMessage = () => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'block',\n\t\t\t\tmargin: '0 auto',\n\t\t\t\twidth: '260px',\n\t\t\t\theight: '250px',\n\t\t\t\tobjectFit: 'contain',\n\t\t\t\t// gridColumn: '2/3',\n\t\t\t}}\n\t\t\tsrc={error}\n\t\t\talt=\"error\"\n\t\t/>\n\t);\n};\n\nexport default ErrorMessage;\n","import { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport './comicsList.scss';\n\nconst ComicItem = ({ comicList }) => {\n\tconst items = comicList.map((comic, i) => {\n\t\treturn (\n\t\t\t<CSSTransition key={i} timeout={500} classNames=\"comics__item\">\n\t\t\t\t<li className=\"comics__item\">\n\t\t\t\t\t<Link to={`/Marvel_react_app/comics/${comic.id}`}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={comic.thumbnail}\n\t\t\t\t\t\t\talt=\"ultimate war\"\n\t\t\t\t\t\t\tclassName=\"comics__item-img\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"comics__item-name\">{comic.title}</div>\n\t\t\t\t\t\t<div className=\"comics__item-price\">{comic.price}</div>\n\t\t\t\t\t</Link>\n\t\t\t\t</li>\n\t\t\t</CSSTransition>\n\t\t);\n\t});\n\n\treturn (\n\t\t<ul className=\"comics__grid\">\n\t\t\t<TransitionGroup component={null}>{items}</TransitionGroup>\n\t\t</ul>\n\t);\n};\n\nexport default ComicItem;\n","import { useState, useEffect } from 'react';\n\nimport { useMarvelServices } from '../../services/marvelServices';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport ComicItem from './ComicItem';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\tconst [comicList, setComicList] = useState([]);\n\tconst [offset, setOffset] = useState(210);\n\tconst [newComicsLoading, setNewComicsLoading] = useState(false);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tconst { loading, error, getAllComics } = useMarvelServices();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n\t\tgetAllComics(offset).then(onComicsLoaded);\n\t};\n\n\tconst onComicsLoaded = (newComicsList) => {\n\t\tconst ended = newComicsList.length < 8 ? true : false;\n\n\t\tsetComicList((comicList) => [...comicList, ...newComicsList]);\n\t\tsetOffset((offset) => offset + 8);\n\t\tsetComicsEnded(ended);\n\t\tsetNewComicsLoading(false);\n\t};\n\n\tconst errorMessage = error ? <ErrorMessage /> : null;\n\tconst spinner = loading && !newComicsLoading ? <Spinner /> : null;\n\n\treturn (\n\t\t<div className=\"comics__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner}\n\t\t\t<ComicItem comicList={comicList} />\n\t\t\t<button\n\t\t\t\tstyle={{ display: comicsEnded ? 'none' : 'block' }}\n\t\t\t\tdisabled={error ? true : newComicsLoading}\n\t\t\t\tonClick={() => onRequest(offset)}\n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default ComicsList;\n","import ComicsList from '../components/comicsList/ComicsList';\nimport ErrorBoundary from '../components/errorBoundary/errorBoundary';\nimport AppBanner from '../components/appBanner/AppBanner';\n\nconst ComicsPage = () => {\n\treturn (\n\t\t<>\n\t\t\t<AppBanner />\n\t\t\t<ErrorBoundary>\n\t\t\t\t<ComicsList />\n\t\t\t</ErrorBoundary>\n\t\t</>\n\t);\n};\n\nexport default ComicsPage;\n","import { useHttp } from '../hooks/useHttp';\n\nexport const useMarvelServices = () => {\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n\tconst _apiKey = 'apikey=804561fe0b4553a3fa7b8ec7fb139828';\n\tconst _baseCharOffset = 210;\n\n\tconst { error, loading, request, clearError } = useHttp();\n\n\tconst getAllCharacters = async (offset = _baseCharOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getCharacter = async (id) => {\n\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n\t\treturn _transformCharacter(res.data.results[0]);\n\t};\n\n\tconst getCharacterByName = async (name) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}characters?name=${name}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformCharacter);\n\t};\n\n\tconst getAllComics = async (offset = _baseCharOffset) => {\n\t\tconst res = await request(\n\t\t\t`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`\n\t\t);\n\t\treturn res.data.results.map(_transformComic);\n\t};\n\n\tconst getComic = async (id) => {\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n\t\treturn _transformComic(res.data.results[0]);\n\t};\n\n\tconst _transformCharacter = (char, fullDescr = 150) => {\n\t\tconst comicsItems = (arr, length) => {\n\t\t\tif (arr.length) return arr.splice(0, length);\n\t\t\telse return [{ name: 'This character does not have comics' }];\n\t\t};\n\n\t\treturn {\n\t\t\tid: char.id,\n\t\t\tthumbnail: `${char.thumbnail.path}.${char.thumbnail.extension}`,\n\t\t\tname: char.name,\n\t\t\tdescription: char.description\n\t\t\t\t? fullDescr\n\t\t\t\t\t? char.description\n\t\t\t\t\t: char.description.slice(0, 220)\n\t\t\t\t: 'There is no description for this character',\n\t\t\thomepage: char.urls[0].url,\n\t\t\twiki: char.urls[1].url,\n\t\t\tcomicsItems: comicsItems(char.comics.items, 10),\n\t\t};\n\t};\n\n\tconst _transformComic = (comics) => {\n\t\treturn {\n\t\t\tid: comics.id,\n\t\t\tthumbnail: `${comics.thumbnail.path}.${comics.thumbnail.extension}`,\n\t\t\ttitle: comics.title,\n\t\t\tdescription:\n\t\t\t\tcomics.description || 'There is no description for this comic',\n\t\t\tprice: comics.prices[0].price + '$',\n\t\t\tlanguage: comics.textObjects.language || 'en-us',\n\t\t\tpages: comics.pageCount\n\t\t\t\t? `${comics.pageCount} pages`\n\t\t\t\t: 'No information about the number of pages',\n\t\t};\n\t};\n\n\treturn {\n\t\tloading,\n\t\terror,\n\t\tgetAllCharacters,\n\t\tgetCharacter,\n\t\tgetAllComics,\n\t\tgetComic,\n\t\tclearError,\n\t\tgetCharacterByName,\n\t};\n};\n","import { useState, useCallback } from 'react';\n\nexport const useHttp = () => {\n\tconst [error, setError] = useState(false);\n\tconst [loading, setLoading] = useState(false);\n\n\tconst request = useCallback(\n\t\tasync (url, method = 'GET', body = null, headers = { 'Content-Type': 'application/json' }) => {\n\t\t\ttry {\n\t\t\t\tsetLoading(true);\n\t\t\t\tconst response = await fetch(url, { method, body, headers });\n\n\t\t\t\tif (!response.ok) {\n\t\t\t\t\tthrow new Error(`Could not fetch ${url}, status ${response.status}`);\n\t\t\t\t}\n\n\t\t\t\tconst data = await response.json();\n\n\t\t\t\tsetLoading(false);\n\n\t\t\t\treturn data;\n\t\t\t} catch (e) {\n\t\t\t\tsetLoading(false);\n\t\t\t\tsetError(e.message);\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\tconst clearError = useCallback(() => setError(null), []);\n\n\treturn { loading, error, request, clearError };\n};\n"],"names":["className","src","avengers","alt","avengersLogo","ErrorBoundary","state","error","errorMessage","console","log","this","setState","props","children","Component","style","display","margin","width","height","objectFit","items","comicList","map","comic","i","CSSTransition","timeout","classNames","to","id","thumbnail","title","price","TransitionGroup","component","useState","setComicList","offset","setOffset","newComicsLoading","setNewComicsLoading","comicsEnded","setComicsEnded","useMarvelServices","loading","getAllComics","useEffect","onRequest","initial","then","onComicsLoaded","newComicsList","ended","length","ErrorMessage","spinner","Spinner","disabled","onClick","AppBanner","_apiBase","_apiKey","_baseCharOffset","setError","setLoading","request","useCallback","url","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","getAllCharacters","res","results","_transformCharacter","getCharacter","getCharacterByName","name","_transformComic","getComic","char","fullDescr","comicsItems","arr","splice","path","extension","description","slice","homepage","urls","wiki","comics","prices","language","textObjects","pages","pageCount"],"sourceRoot":""}